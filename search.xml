<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>jdbc数据库连接方式迭代</title>
      <link href="posts/4abf35f0.html"/>
      <url>posts/4abf35f0.html</url>
      
        <content type="html"><![CDATA[<h2 id="jdbc数据库连接方式（迭代）"><a href="#jdbc数据库连接方式（迭代）" class="headerlink" title="jdbc数据库连接方式（迭代）"></a>jdbc数据库连接方式（迭代）</h2><h4 id="方式五为最终版本"><a href="#方式五为最终版本" class="headerlink" title="方式五为最终版本"></a>方式五为最终版本</h4><h3 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h3><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> SQLException <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//        1.获取Driver的实现类对象</span>        Driver driver <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>Driver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//url:http://localhost:8080/gmail/key.jpg</span><span class="token comment" spellcheck="true">//        jdbc:mysql:协议</span><span class="token comment" spellcheck="true">//        localhost:ip地址</span><span class="token comment" spellcheck="true">//        3306  默认mysql端口号</span><span class="token comment" spellcheck="true">//        test:test数据库</span>        String                           url<span class="token operator">=</span><span class="token string">"jdbc:mysql://localhost:3306/test"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        将用户名和密码封装在Properties</span>        Properties info<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                info<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        info<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">,</span><span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Connection con<span class="token operator">=</span>driver<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>con<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h3><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//    方式二  对方式一的迭代</span><span class="token comment" spellcheck="true">//    在如下的程序中不出现第三方的API,使程序具有更好的可移植性</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testConnections</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//    1.获取Driver实现类对象，使用反射</span>     Class <span class="token class-name">cla</span><span class="token operator">=</span>Class<span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     Driver driver<span class="token operator">=</span><span class="token punctuation">(</span>Driver<span class="token punctuation">)</span>cla<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//     2.提供连接的数据库</span>     String url<span class="token operator">=</span><span class="token string">"jdbc:mysql://localhost:3306/test"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//     3.提供连接需要的用户名和密码</span>     Properties info<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     info<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     info<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//     4.获取连接</span>     Connection con<span class="token operator">=</span>driver<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> info<span class="token punctuation">)</span><span class="token punctuation">;</span>     System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>con<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="方式三"><a href="#方式三" class="headerlink" title="方式三"></a>方式三</h3><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//    方式三：使用DriverManager替换Driver</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testConnection3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//        1.获取Driver 实现类对象</span>        Class <span class="token class-name">clazz</span><span class="token operator">=</span>Class<span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Driver driver<span class="token operator">=</span><span class="token punctuation">(</span>Driver<span class="token punctuation">)</span>clazz<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//        2.提供另外三个连接信息</span>        String url<span class="token operator">=</span><span class="token string">"jdbc:mysql://localhost:3306/test"</span><span class="token punctuation">;</span>        String user<span class="token operator">=</span><span class="token string">"root"</span><span class="token punctuation">;</span>        String password<span class="token operator">=</span><span class="token string">"root"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        注册驱动</span>        DriverManager<span class="token punctuation">.</span><span class="token function">registerDriver</span><span class="token punctuation">(</span>driver<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        获取连接</span>        Connection con<span class="token operator">=</span>DriverManager<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>user<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>con<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="方式四"><a href="#方式四" class="headerlink" title="方式四"></a>方式四</h3><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//    方式四：可以只是加载驱动，不用显示的注册驱动了</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testConnection4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//    1.提供三个连接的基本信息</span>        String url<span class="token operator">=</span><span class="token string">"jdbc:mysql://localhost:3306/test"</span><span class="token punctuation">;</span>        String user<span class="token operator">=</span><span class="token string">"root"</span><span class="token punctuation">;</span>        String password<span class="token operator">=</span><span class="token string">"root"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//    2.加载Driver</span>        Class<span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        相较于方式三，可以省略如下操作</span><span class="token comment" spellcheck="true">//        Driver driver=(Driver)clazz.newInstance();</span><span class="token comment" spellcheck="true">//        注册驱动</span><span class="token comment" spellcheck="true">//        DriverManager.registerDriver(driver);</span><span class="token comment" spellcheck="true">//        为什么可以：</span>                <span class="token comment" spellcheck="true">/*在MySQL的Driver实现类中声明了静态代码块来实现注册驱动         *          */</span><span class="token comment" spellcheck="true">//    3.获取连接</span>        Connection con<span class="token operator">=</span>DriverManager<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>user<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>con<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="方式五（最终版本）"><a href="#方式五（最终版本）" class="headerlink" title="方式五（最终版本）"></a>方式五（最终版本）</h3><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//    方式五：将数据库连接需要的4个信息</span>    <span class="token comment" spellcheck="true">/*     * 好处：     * 1.实现了数据与代码的分离，实现了解耦     * 2.如果需要修改配置文件信息，可以避免程序重新打包     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getConnection5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//        1.读取配置文件中的4个基本信息</span>    InputStream is<span class="token operator">=</span> JdbcCreat1<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">"jdbc.properties"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Properties pro <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    pro<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">;</span>    String user<span class="token operator">=</span>pro<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    String password<span class="token operator">=</span>pro<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    String url<span class="token operator">=</span>pro<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    String driverClass<span class="token operator">=</span>pro<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"driverClass"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//    2.加载驱动</span>    Class<span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>driverClass<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//    3.获取连接</span>    Connection con <span class="token operator">=</span> DriverManager<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>user<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>con<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><ul><li><p>附带的配置文件</p><pre class=" language-java"><code class="language-java">user<span class="token operator">=</span>rootpassword<span class="token operator">=</span>rooturl<span class="token operator">=</span>jdbc<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">3306</span><span class="token operator">/</span>testdriverClass<span class="token operator">=</span>com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>Driver</code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据库连接 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jdbc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java概述</title>
      <link href="posts/5e4eda94.html"/>
      <url>posts/5e4eda94.html</url>
      
        <content type="html"><![CDATA[<h2 id="java帝国的诞生"><a href="#java帝国的诞生" class="headerlink" title="java帝国的诞生"></a>java帝国的诞生</h2><h3 id="C-amp-C"><a href="#C-amp-C" class="headerlink" title="C &amp; C++"></a>C &amp; C++</h3><ul><li>1972年C诞生<ul><li>贴近硬件，运行极快，效率高</li><li>操作系统，编译器，数据库，网络系统</li><li>指针和内存管理</li></ul></li><li>1982年C++诞生<ul><li>面向对象</li><li>兼容C</li><li>圆形领域、游戏等</li></ul></li></ul><h2 id="java特性和优势"><a href="#java特性和优势" class="headerlink" title="java特性和优势"></a>java特性和优势</h2><ul><li>简单性</li><li>面向对象</li><li>可移植性 跨平台性 虚拟机</li><li>Write Once ,Run Anywhere</li><li>高性能</li><li>分布式</li><li>动态性 反射机制</li><li>多线程</li><li>安全性</li><li>健壮性</li></ul><h2 id="Java三大版本"><a href="#Java三大版本" class="headerlink" title="Java三大版本"></a>Java三大版本</h2><ul><li>JavaSE :标准版 (桌面程序，控制台开发。。。)</li><li>JavaME:嵌入式开发</li><li>JavaEE:E企业级开发（web端，服务器开发。。）</li></ul><h2 id="JDK，JRE-JVM"><a href="#JDK，JRE-JVM" class="headerlink" title="JDK，JRE , JVM"></a>JDK，JRE , JVM</h2><ul><li>JVM:Java虚拟机</li><li>JRE:Java的运行环境 jre=JVM+类库</li><li>JDK: Java开发工具 jdk=jre+开发工具（编译工具 Javac.exe 打包工具 jar.exe)</li><li>简单而言：使用JDK开发完成的Java程序，交给JRE去运行</li></ul><h2 id="搭建开发环境"><a href="#搭建开发环境" class="headerlink" title="搭建开发环境"></a>搭建开发环境</h2><h3 id="卸载jdK"><a href="#卸载jdK" class="headerlink" title="卸载jdK"></a>卸载jdK</h3><ol><li>删除Java的安装目录</li><li>删除JAVA_HOME</li><li>删除path下关于Java的目录</li><li>java-version 命令行输入</li></ol><h3 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h3><ol><li><p>百度搜索JDK8 找到下载地址</p></li><li><p>同意协议</p></li><li><p>下载电脑对应的版本</p></li><li><p>双击安装</p></li><li><p><strong>记住安装的路径</strong></p></li><li><p>配置环境变量</p><ol><li>我的电脑–&gt;右键–&gt;属性<ol><li>环境变量–&gt;JAVA_HOME</li><li>配置path变量</li></ol></li></ol></li><li><p>测试JDK是否安装成功</p></li><li><p>打开cmd</p><ol start="2"><li>输入java -version</li></ol></li></ol><h2 id="hello-World第一个Java程序"><a href="#hello-World第一个Java程序" class="headerlink" title="hello World第一个Java程序"></a>hello World第一个Java程序</h2><ol><li>新建一个文件夹，存放代码</li><li>新建一个Java文件<ul><li>文件后缀名为.java</li><li>Hello.java</li><li>[注意点]：系统可能没有显示后缀名，需要手动打开</li></ul></li><li>编写代码</li></ol><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hello</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><ol><li>编译javac java文件，生成 .class文件</li><li>运行class文件，java class文件</li></ol><h3 id="可能出现的问题"><a href="#可能出现的问题" class="headerlink" title="可能出现的问题"></a>可能出现的问题</h3><ol><li>每个单词的大小写不能出现问题，<strong>java是严格区分大小写的</strong></li><li>尽量用英文</li><li>文件名和类名必须保证一致，并且首字母大写</li><li>符号使用了中文</li><li>乱码，编码集错误，更改保存文件的编码集</li></ol><h3 id="java程序运行机制"><a href="#java程序运行机制" class="headerlink" title="java程序运行机制"></a>java程序运行机制</h3><p>编译型：全部编译为机器语言，统一执行</p><p>解释型：边解释边运行</p><p>源程序 java文件 ——&gt;java编译器–&gt;字节码.class文件 –&gt;类加载器–&gt;字节码校验器—&gt;解释器—&gt;操作系统平台</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java java基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>盒子布局</title>
      <link href="posts/f929.html"/>
      <url>posts/f929.html</url>
      
        <content type="html"><![CDATA[<h3 id="盒子的水平布局"><a href="#盒子的水平布局" class="headerlink" title="盒子的水平布局"></a>盒子的水平布局</h3><ul><li><p>元素水平方向的布局：<br><em><strong>元素在其父元素中，水平方向的位置由以下几个属性共同决定</strong></em></p><ul><li><p>margin-left</p></li><li><p>border-left</p></li><li><p>padding-left</p></li><li><p>width</p></li><li><p>padding-right </p></li><li><p>border-right</p></li><li><p>margin-right</p><blockquote><p>上述几个属性对应值的和=其父元素内容区的宽度（必须满足）</p><p>如果相加结果使等式不成立，则称为过渡约束，则等式会自动调整</p></blockquote><ul><li><p>调整情况：<br>这七个值中有三个值可设置为auto  </p><ul><li><p>width  默认值为 auto</p></li><li><p>margin-left  默认值 0</p></li><li><p>margin-right 默认值 0</p><ol><li><p>如果七个值中没有auto的情况，则浏览器会自动调整margin-right的值使等式满足</p></li><li><p>如果某个值为auto，则会自动调整为auto的那个值以使等式成立</p></li><li><p>如果将一个宽度和一个外边距设置为auto，则宽度会调到最大，设置为auto的外边距自动为0</p></li><li><p>如果将三个值都设置为 auto ，则外边距都是0，宽度最大</p></li><li><p>如果将外边距都设置为auto ，宽度为固定值，则外边距设置为相同的值<br>利用这一特点来使一个元素在其父元素中水平居中</p><pre class=" language-CSS"><code class="language-CSS">width:100px;margin:0 auto;  /*水平居中*/</code></pre></li></ol></li></ul></li></ul></li></ul></li></ul><h3 id="盒子的垂直布局"><a href="#盒子的垂直布局" class="headerlink" title="盒子的垂直布局"></a>盒子的垂直布局</h3><ul><li>默认情况下：父元素的高度被内容撑开<ul><li><p>子元素是在父元素的内容区中排列的</p></li><li><p>如果子元素的大小超过了父元素，则子元素会从父元素中溢出<br><strong>使用overflow 属性设置父元素如何处理溢出的子元素</strong></p><ul><li>可选值<ul><li> visible 默认值 子元素会从父元素中溢出，在父元素外部的位置溢出</li><li> hidden 溢出的内容将会被裁剪，不会显示</li><li> scroll 生成两个滚动条，通过滚动条来查看完整的内容</li><li> auto  根据需要生成滚动条</li><li> overflow-x：单独处理水平方向</li><li> overflow-y：单独处理垂直方向</li></ul></li></ul></li></ul></li></ul><h4 id="外边距折叠问题"><a href="#外边距折叠问题" class="headerlink" title="外边距折叠问题"></a>外边距折叠问题</h4><ul><li><p>相邻的垂直方向外边距会发生重叠现象</p><ol><li><p>兄弟元素：</p><ul><li>兄弟元素之间相邻，垂直外边距会取两者之间的最大值（两者都为正值）</li></ul><p><strong>特殊情况：如果相邻的外边距一正一负，则取两者之和</strong></p><p>​                     都是负值，则取两者中绝对值较大的</p></li><li><p>父子元素：</p><ul><li>父子元素间相邻外边距，子元素的会传递给父元素（上外边距）需进行处理</li><li>处理方式详见浮动中高度塌陷的解决方案</li></ul></li></ol><h4 id="行内元素的盒模型："><a href="#行内元素的盒模型：" class="headerlink" title="行内元素的盒模型："></a>行内元素的盒模型：</h4></li><li><p>行内元素不支持设置宽度和高度</p></li><li><p>行内元素可以设置 padding ，但是垂直方向 padding 不影响页面的布局</p></li><li><p>行内元素可以设置 margin ，但是垂直方向 margin 不影响页面的布局</p></li><li><p>行内元素可以设置 border ，但是垂直方向 border 不影响页面的布局</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 静态网页布局 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html css </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
